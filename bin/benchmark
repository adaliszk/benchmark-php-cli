#!/usr/bin/env bash

# 
# Copyright (C) 2017 Ádám Liszkai <adaliszk@gmail.com>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# 
php -r 'file_put_contents("/out/".getenv("CONTAINER_NAME")."-version", phpversion());'
version=$(cat "/out/$CONTAINER_NAME-version")
printf "\e[1;37mVersion: \e[1;34m$version\e[0m\n"

configutaion=$(php -i | grep 'Configure' | sed "s/Configure Command =>  //g" | tr -d "'" )
if [ ! -z "$configutaion" ]; then
	printf "\e[1;37mConfiguration: \e[1;34m$configutaion\e[0m\n"
	echo $configutaion > "/out/$CONTAINER_NAME.configure"
fi

php -r 'file_put_contents("/out/".getenv("CONTAINER_NAME")."-modules", implode("\n", get_loaded_extensions()));'
modules=$(cat "/out/$CONTAINER_NAME-modules" | sed 's/^/\\e[1;34m- /' | sed 's/\\n/\e[0m\n\\n/')
printf "\e[1;37mModules:\n$modules\e[0m\n"

flag_quick=false

while getopts 'q:quick' flag; do
  case "${flag}" in
    q) flag_quick=true ;;
    quick) flag_quick=true ;;
    *) error "Unexpected option ${flag}" ;;
  esac
done

scripts=/srv/*.php
for file in $scripts
do
	filename=${file##*/}
	basename=${filename%.*}
	resultdir=/out/$basename
	label=$(echo $basename | awk '{print toupper($0)}')
	
	rm -rf $resultdir
	mkdir -p $resultdir

	printf "\n\e[1;37mBenchmarking \e[1;33m$label\e[0m\e[1;37m...\e[0m\n"
	
	mesureCommand="/opt/mesure"
	case "$basename" in
		"00#0-empty") mesureCommand="/opt/mesure" ;;
		*) if [[  "$flag_quick" = true ]]; then mesureCommand="/opt/mesure-quick"; fi ;;
	esac
	
	execBegin="$(date -u +%s)"
	bash $mesureCommand $basename "$resultdir/$CONTAINER_NAME"
	execEnd="$(date -u +%s)"
	
	elapsedTime=$(($execEnd-$execBegin))
	printf "\e[1;37m[DONE] Runtime:\e[1;33m${elapsedTime}\e[0m\e[1;37ms\e[0m\n"
	
	printf "\n\e[0;37mParsing results...\e[0m\n"
	resultSerialized=$(cat $resultdir/$CONTAINER_NAME | /opt/parse-result $CONTAINER_NAME $basename)
	
	echo $resultSerialized > "$resultdir/$CONTAINER_NAME.sphp"
	result=$(cat "$resultdir/$CONTAINER_NAME.sphp" | /opt/print-result $CONTAINER_NAME $basename)
	
	printf "$result\n"
done

chmod 777 -R /out
